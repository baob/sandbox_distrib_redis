!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<<	lib/storage/consecutive_primes_list.rb	/^  def <<(n)$/;"	f	class:ConsecutivePrimesList
ConsecutivePrimesList	lib/storage/consecutive_primes_list.rb	/^class ConsecutivePrimesList$/;"	c
Primes	lib/primes.rb	/^class Primes$/;"	c
PrimesList	lib/storage/primes_list.rb	/^class PrimesList < Array$/;"	c
PrimesNonConsec	lib/primes_non_consec.rb	/^class PrimesNonConsec < Primes$/;"	c
VolatileInteger	lib/storage/volatile_integer.rb	/^class VolatileInteger$/;"	c
VolatilePrimesList	lib/storage/volatile_primes_list.rb	/^class VolatilePrimesList < Array$/;"	c
add_new_prime	lib/storage/consecutive_primes_list.rb	/^  def add_new_prime(n)$/;"	f	class:ConsecutivePrimesList
add_new_test	lib/storage/consecutive_primes_list.rb	/^  def add_new_test(n)$/;"	f	class:ConsecutivePrimesList
add_non_prime	lib/storage/consecutive_primes_list.rb	/^  def add_non_prime(n)$/;"	f	class:ConsecutivePrimesList
add_non_prime	lib/storage/primes_list.rb	/^  def add_non_prime(n)$/;"	f	class:PrimesList
all_results	lib/storage/consecutive_primes_list.rb	/^  def all_results$/;"	f	class:ConsecutivePrimesList
initialize	lib/primes.rb	/^  def initialize(opts = {})$/;"	f	class:Primes
initialize	lib/primes_non_consec.rb	/^  def initialize(opts = {})$/;"	f	class:PrimesNonConsec
initialize	lib/storage/consecutive_primes_list.rb	/^  def initialize$/;"	f	class:ConsecutivePrimesList
initialize	lib/storage/volatile_integer.rb	/^  def initialize(n)$/;"	f	class:VolatileInteger
is_prime?	lib/primes.rb	/^  def is_prime?(candidate)$/;"	f	class:Primes
largest_consecutive_test	lib/storage/consecutive_primes_list.rb	/^  def largest_consecutive_test$/;"	f	class:ConsecutivePrimesList
largest_consecutive_test=	lib/storage/consecutive_primes_list.rb	/^  def largest_consecutive_test=(n)$/;"	f	class:ConsecutivePrimesList
move_to_consecutive_tests	lib/storage/consecutive_primes_list.rb	/^  def move_to_consecutive_tests(n)$/;"	f	class:ConsecutivePrimesList
next_consecutive?	lib/storage/consecutive_primes_list.rb	/^  def next_consecutive?(n)$/;"	f	class:ConsecutivePrimesList
non_consecutive_primes	lib/storage/consecutive_primes_list.rb	/^  def non_consecutive_primes$/;"	f	class:ConsecutivePrimesList
non_consecutive_tests	lib/storage/consecutive_primes_list.rb	/^  def non_consecutive_tests$/;"	f	class:ConsecutivePrimesList
result_is_not_prime	lib/primes.rb	/^  def result_is_not_prime(test)$/;"	f	class:Primes
result_is_prime	lib/primes.rb	/^  def result_is_prime(test)$/;"	f	class:Primes
run	lib/primes.rb	/^  def run(count)$/;"	f	class:Primes
run	lib/primes_non_consec.rb	/^  def run(count)$/;"	f	class:PrimesNonConsec
set	lib/storage/volatile_integer.rb	/^  def set(n)$/;"	f	class:VolatileInteger
to_a	lib/storage/consecutive_primes_list.rb	/^  def to_a$/;"	f	class:ConsecutivePrimesList
to_i	lib/storage/volatile_integer.rb	/^  def to_i$/;"	f	class:VolatileInteger
update_consecutive_primes_list	lib/storage/consecutive_primes_list.rb	/^  def update_consecutive_primes_list(n)$/;"	f	class:ConsecutivePrimesList
